apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflare-tunnel
  labels:
    app.kubernetes.io/name: cloudflare-tunnel
    app.kubernetes.io/instance: cloudflare-tunnel
    app.kubernetes.io/version: "2024.8.3"
    app.kubernetes.io/managed-by: kustomize
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudflare-tunnel
      app.kubernetes.io/instance: cloudflare-tunnel
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudflare-tunnel
        app.kubernetes.io/instance: cloudflare-tunnel
        app.kubernetes.io/version: "2024.8.3"
        app.kubernetes.io/managed-by: kustomize
      annotations:
        # These annotations will be updated by Kustomize when config or secret change
        checksum/configmap: ""
        checksum/secret: ""
    spec:
      serviceAccountName: cloudflare-tunnel
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
      containers:
        - name: cloudflare-tunnel
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          image: cloudflare/cloudflared:2024.8.3
          imagePullPolicy: IfNotPresent
          args:
            - tunnel
            # Points cloudflared to the config file, which configures what
            # cloudflared will actually do. This file is created by a ConfigMap.
            - --config
            - /etc/cloudflared/config/config.yaml
            - run
          livenessProbe:
            httpGet:
              # Cloudflared has a /ready endpoint which returns 200 if and only if
              # it has an active connection to the edge.
              path: /ready
              port: 2000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/cloudflared/config
              readOnly: true
            # Each tunnel has an associated "credentials file" which authorizes machines
            # to run the tunnel. cloudflared will read this file from its local filesystem,
            # and it'll be stored in a k8s secret.
            - name: creds
              mountPath: /etc/cloudflared/creds
              readOnly: true
          resources:
            # Default resources - can be overridden in overlays
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
      volumes:
        - name: creds
          secret:
            secretName: cloudflare-tunnel
        - name: config
          configMap:
            name: cloudflare-tunnel
            items:
              - key: config.yaml
                path: config.yaml
      # Default affinity spreads pods across nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 10
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - cloudflare-tunnel
